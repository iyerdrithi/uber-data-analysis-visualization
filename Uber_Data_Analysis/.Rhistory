library(scales)
library(ggplot2)
library(ggthemes)
install.packages("ggthemes")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
install.packages("DT")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
colors = c(""#05a357", "#0576a3", "#d27dfa", "#f26bae", "#f2d56b", "#f05d5d", "#34baad"")
apr_data <- read_csv("C:/Users/diyer/Desktop/Uber-dataset/uber-raw-data-apr14.csv")
library(readr)
apr_data <- read_csv("C:/Users/diyer/Desktop/Uber-dataset/uber-raw-data-apr14.csv")
may_data <- read_csv("C:/Users/diyer/Desktop/Uber-dataset/uber-raw-data-may14.csv")
jun_data <- read_csv("C:/Users/diyer/Desktop/Uber-dataset/uber-raw-data-jun14.csv")
jul_data <- read_csv("C:/Users/diyer/Desktop/Uber-dataset/uber-raw-data-jul14.csv")
aug_data <- read_csv("C:/Users/diyer/Desktop/Uber-dataset/uber-raw-data-aug14.csv")
sep_data <- read_csv("C:/Users/diyer/Desktop/Uber-dataset/uber-raw-data-sep14.csv")
uber_data_2014 <- rbind(apr_data, may_data, jun_data, jul_data, aug_data, sep_data)
uber_data_2014 <- rbind(apr_data, may_data, jun_data, jul_data, aug_data, sep_data)
head(uber_data_2014)
uber_data_2014$`Date/Time` <- as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S")
uber_data_2014$`Date/Time` <- as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S")
uber_data_2014$Time <- format(as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S"), format="%H:%M:%S")
uber_data_2014$`Date/Time` <- as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S")
uber_data_2014$Time <- format(as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S"), format="%H:%M:%S")
uber_data_2014$`Date/Time` <- ymd_hms(uber_data_2014$`Date/Time`)
uber_data_2014$Day <- factor(day(uber_data_2014$`Date/Time`))
uber_data_2014$Month <- factor(month(uber_data_2014$`Date/Time`, label = TRUE))
uber_data_2014$Year <- factor(year(uber_data_2014$`Date/Time`))
uber_data_2014$DayofWeek <- factor(wday(uber_data_2014$`Date/Time`, label = TRUE))
head(uber_data_2014)
colors = c(""#05a357", "#0576a3", "#d27dfa", "#f26bae", "#f2d56b", "#f05d5d", "#34baad"")
head(uber_data_2014)
uber_data_2014$`Date/Time` <- as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S"),
uber_data_2014$`Date/Time` <- as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S"),
uber_data_2014$Second <- factor(second(hms(uber_data_2014$Time)))
uber_data_2014$`Date/Time` <- as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S")
uber_data_2014$Time <- format(as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S"), format="%H:%M:%S")
uber_data_2014$`Date/Time` <- ymd_hms(uber_data_2014$`Date/Time`)
uber_data_2014$Day <- factor(day(uber_data_2014$`Date/Time`))
uber_data_2014$Month <- factor(month(uber_data_2014$`Date/Time`, label = TRUE))
uber_data_2014$Year <- factor(year(uber_data_2014$`Date/Time`))
uber_data_2014$DayofWeek <- factor(wday(uber_data_2014$`Date/Time`, label = TRUE))
uber_data_2014$Hour <- factor(hour(hms(uber_data_2014$Time)))
uber_data_2014$Minute <- factor(minute(hms(uber_data_2014$Time)))
uber_data_2014$Second <- factor(second(hms(uber_data_2014$Time)))
uber_data_2014$`Date/Time` <- as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S")
uber_data_2014$Time <- format(as.POSIXct(uber_data_2014$`Date/Time`, format = "%m/%d/%Y %H:%M:%S"), format="%H:%M:%S")
uber_data_2014$`Date/Time` <- ymd_hms(uber_data_2014$`Date/Time`)
uber_data_2014$Day <- factor(day(uber_data_2014$`Date/Time`))
uber_data_2014$Month <- factor(month(uber_data_2014$`Date/Time`, label = TRUE))
uber_data_2014$Year <- factor(year(uber_data_2014$`Date/Time`))
uber_data_2014$DayofWeek <- factor(wday(uber_data_2014$`Date/Time`, label = TRUE))
uber_data_2014$Hour <- factor(hour(hms(uber_data_2014$Time)))
uber_data_2014$Minute <- factor(minute(hms(uber_data_2014$Time)))
uber_data_2014$Second <- factor(second(hms(uber_data_2014$Time)))
head(uber_data_2014)
view(uber_data_2014)
View(uber_data_2014)
hour_data <- uber_data_2014 %>% group_by(hour) %>% dplyr:summarize(Total = n())
hour_data <- uber_data_2014 %>% group_by(Hour) %>% dplyr:summarize(Total = n())
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
hour_data <- uber_data_2014 %>% group_by(Hour) %>% dplyr:summarize(Total = n())
hour_data <- uber_data_2014 %>% group_by(Hour) %>% dplyr::summarize(Total = n())
datatable(hour_data)
ggplot(hour_data, aes(hour, Total)) + geom_bar(stat = "identity", fill="green") + ggtitle("Trips Made Every Hour") + theme(legend.position = "none") + scale_y_continuous(labels = comma)
ggplot(hour_data, aes(hour, Total)) + geom_bar(stat = "identity", fill="green") + ggtitle("Trips Made Every Hour") + theme(legend.position = "none") + scale_y_continuous(labels = comma)
ggplot(hour_data, aes(Hour, Total)) + geom_bar(stat = "identity", fill="green") + ggtitle("Trips Made Every Hour") + theme(legend.position = "none") + scale_y_continuous(labels = comma)
ggplot(hour_data, aes(Hour, Total)) + geom_bar(stat = "identity", fill="#f05d5d") + ggtitle("Trips Made Every Hour") + theme(legend.position = "none") + scale_y_continuous(labels = comma)
month_hour_data <- uber_data_2014 %>% group_by(Month, Hour) %>% dplyr::summarize(Total = n())
ggplot(month_hour_data, aes(Hour, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips Made by Hour and Month") + scale_y_continuous(labels = comma)
day_data <- uber_data_2014 %>% groupp_by(Day) %>% dplyr::summarize(Total = n())
day_data <- uber_data_2014 %>% group_by(Day) %>% dplyr::summarize(Total = n())
datatable(day_data)
ggplot(day_data, aes(Day, Total)) + geom_bar(stat = "identity", fill = "#0576a3") + ggtitle("Trips Made Everyday") + theme(legend.position = "none") + scale_y_continuous(labels = comma)
day_month_data <- uber_data_2014 %>% group_by(Month, Day) %>% dplyr::summarize(Total = n())
ggplot(day_month_data, aes(Day, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
colors = c(""#05a357", "#0576a3", "#d27dfa", "#f26bae", "#f2d56b", "#f05d5d", "#34baad""),
colors = c(""#05a357", "#0576a3", "#d27dfa", "#f26bae", "#f2d56b", "#f05d5d", "#34baad"")
colors = c("#05a357", "#0576a3", "#d27dfa", "#f26bae", "#f2d56b", "#f05d5d", "#34baad")
day_month_data <- uber_data_2014 %>% group_by(Month, Day) %>% dplyr::summarize(Total = n())
ggplot(day_month_data, aes(Day, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
day_month_data <- uber_data_2014 %>% group_by(Month, Day) %>% dplyr::summarize(Total = n())
ggplot(day_month_data, aes(Month, Total, fill = Day)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
day_month_data <- uber_data_2014 %>% group_by(Month, Day) %>% dplyr::summarize(Total = n())
ggplot(day_month_data, aes(DayofWeek, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
ggplot(day_month_data, aes(Day, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
View(day_month_data)
day_month_data <- uber_data_2014 %>% group_by(Month, DayofWeek) %>% dplyr::summarize(Total = n())
ggplot(day_month_data, aes(DayofWeek, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
ggplot(day_month_data, aes(Month, Total, fill = DayofWeek)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
ggplot(day_month_data, aes(DayofWeek, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
day_month_data <- uber_data_2014 %>% group_by(Month, Day) %>% dplyr::summarize(Total = n())
ggplot(day_month_data, aes(Day, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
month_data <- uber_data_2014 %>% group_by(Month) %>% dplyr::summarize(Total = n())
datatable(month_group)
datatable(month_data)
ggplot(month_data, aes(Month, Total, fill = month)) + geom_bar(stat = "identity") + ggtitle("Trips by Month") + theme(legend.position = "none") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
ggplot(month_data, aes(Month, Total)) + geom_bar(stat = "identity", fill = "#34baad") + ggtitle("Trips by Month") + theme(legend.position = "none") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
ggplot(dayofweek_month_data, aes(DayofWeek, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day of the Week and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
dayofweek_month_data <- uber_data_2014 %>% group_by(Month, DayofWeek) %>% dplyr::summarize(Total = n())
ggplot(dayofweek_month_data, aes(DayofWeek, Total, fill = Month)) + geom_bar(stat = "identity") + ggtitle("Trips by Day of the Week and Month") + scale_y_continuous(labels = comma) + scale_fill_manual(values = colors)
dayofweek_month_data <- uber_data_2014 %>% group_by(Month, DayofWeek) %>% dplyr::summarize(Total = n())
ggplot(dayofweek_month_data, aes(x = Month, y = Total, group = Month, color = DayofWeek)) + geom_bar()
dayofweek_month_data <- uber_data_2014 %>% group_by(Month, DayofWeek) %>% dplyr::summarize(Total = n())
ggplot(dayofweek_month_data, aes(x = Month, y = Total, group = Month, color = DayofWeek)) + geom_bar(stat = "identity")
dayofweek_month_data <- uber_data_2014 %>% group_by(Month, DayofWeek) %>% dplyr::summarize(Total = n())
ggplot(dayofweek_month_data, aes(x = Month, y = Total, group = Month, color = DayofWeek)) + geom_bar(stat = "identity", position = position_dodge(0.8))
dayofweek_month_data <- uber_data_2014 %>% group_by(Month, DayofWeek) %>% dplyr::summarize(Total = n())
ggplot(dayofweek_month_data, aes(x = Month, y = Total, fill = DayofWeek)) + geom_bar(position = "dodge", stat = "identity")
dayofweek_month_data <- uber_data_2014 %>% group_by(Month, DayofWeek) %>% dplyr::summarize(Total = n())
ggplot(dayofweek_month_data, aes(x = Month, y = Total, fill = DayofWeek)) + geom_bar(position = "dodge", stat = "identity") + scale_fill_manual(values = colors)
View(uber_data_2014)
ggplot(uber_data_2014, aes(uber_data_2014$Base)) + geom_bar(fill = "#f2d56b") + scale_y_continuous(labels = comma) + ggtitle("Trips by Bases")
ggplot(uber_data_2014, aes(Base)) + geom_bar(fill = "#f2d56b") + scale_y_continuous(labels = comma) + ggtitle("Trips by Bases")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
ggplot(uber_data_2014, aes(uber_data_2014$Base)) + geom_bar(fill = "#f2d56b") + scale_y_continuous(labels = comma) + ggtitle("Trips by Bases")
ggplot(uber_data_2014, aes(Base)) + geom_bar(fill = "#f2d56b") + scale_y_continuous(labels = comma) + ggtitle("Trips by Bases")
ggplot(uber_data_2014, aes(x = Base, fill = Month)) + geom_bar(position = "dodge", stat = "identity") + scale_fill_manual(values = colors)
ggplot(uber_data_2014, aes(x = Base, y = Total, fill = Month)) + geom_bar(position = "dodge", stat = "identity") + scale_fill_manual(values = colors)
ggplot(uber_data_2014, aes(x = Base, y = count, fill = Month)) + geom_bar(position = "dodge", stat = "identity") + scale_fill_manual(values = colors)
ggplot(uber_data_2014, aes(Base, fill = Month)) + geom_bar(position = "dodge", stat = "identity") + scale_fill_manual(values = colors)
View(day_month_data)
View(uber_data_2014)
base_month_data <- uber_data_2014 %>% group_by(Month, Base) %>% dplyr::summarize(Total = n())
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
base_month_data <- uber_data_2014 %>% group_by(Month, Base) %>% dplyr::summarize(Total = n())
ggplot(base_month_data, aes(x = Base, y = Total, fill = Month)) + geom_bar(position = "dodge", stat = "identity") + scale_fill_manual(values = colors)
base_dayofweek_data <- uber_data_2014 %>% group_by(DayofWeek, Base) %>% dplyr::summarize(Total = n())
ggplot(base_dayofweek_data, aes(x = Base, y = Total, fill = DayofWeek)) + geom_bar(position = "dodge", stat = "identity") + scale_fill_manual(values = colors)
datatable(day_and_hour)
day_and_hour <- uber_data_2014 %>% group_by(Day, Hour) %>% dplyr::summarize(Total = n())
datatable(day_and_hour)
ggplot(day_and_hour, aes(Day, Hour, fill = Total)) + geom_tile(color = "white") + ggtitle("Heap Map by Hour and Day")
ggplot(day_and_hour, aes(Day, Hour, fill = Total)) + geom_tile(color = "white") + ggtitle("Heat Map by Hour and Day")
day_and_month <- uber_data_2014 %>% group_by(Day, Month) %>% dplyr::summarize(Total = n())
ggplot(day_and_month, aes(Day, Month, fill = Total)) + geom_tile(color = "white") + ggtitle("Heat Map by Month and Day")
month_and_dayofweek <- uber_data_2014 %>% group_by(Month, DayofWeek) %>% dplyr::summarize(Total = n())
ggplot(month_and_dayofweek, aes(DayofWeek, Month, fill = Total)) + geom_tile(color = "white") + ggtitle("Heat Map by Day of Week and Month")
month_and_bases <- uber_data_2014 %>% group_by(Month, Base) %>% dplyr::summarize(Total = n())
ggplot(month_and_bases, aes(Month, Base, fill = Total)) + geom_tile(color = "white") + ggtitle("Heat Map by Month and Bases")
month_and_bases <- uber_data_2014 %>% group_by(Month, Base) %>% dplyr::summarize(Total = n())
ggplot(month_and_bases, aes(Base, Month, fill = Total)) + geom_tile(color = "white") + ggtitle("Heat Map by Month and Bases")
bases_and_dayofweek <- uber_data_2014 %>% group_by(DayofWeek, Base) %>% dplyr::summarize(Total = n())
ggplot(bases_and_dayofweek, aes(Base, DayofWeek, fill = Total)) + geom_tile(color = "wite") + ggtitle("Heat Map by Bases and Day of Week")
bases_and_dayofweek <- uber_data_2014 %>% group_by(DayofWeek, Base) %>% dplyr::summarize(Total = n())
ggplot(bases_and_dayofweek, aes(Base, DayofWeek, fill = Total)) + geom_tile(color = "white") + ggtitle("Heat Map by Bases and Day of Week")
# Get map of New York City
NY_map <- get_map(location = c(lon = mean(uber_data_2014$Lon), lat = mean(uber_data_2014$Lat)), zoom = 10, maptype = "roadmap", color = "bw")
ggplot(day_and_hour, aes(Day, Hour, fill = Total)) + geom_tile(color = "white") + ggtitle("Heap Map by Hour and Day")
install.packages("ggmap")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
library(ggmap)
# Get map of New York City
NY_map <- get_map(location = c(lon = mean(uber_data_2014$Lon), lat = mean(uber_data_2014$Lat)), zoom = 10, maptype = "roadmap", color = "bw")
register_google(key = [AIzaSyAlcGYkDytCyLWK1zRxVHQRRVRDu5DYXtU], write = TRUE)
register_google(key = "AIzaSyAlcGYkDytCyLWK1zRxVHQRRVRDu5DYXtU", write = TRUE)
# Get map of New York City
NY_map <- get_map(location = c(lon = mean(uber_data_2014$Lon), lat = mean(uber_data_2014$Lat)), zoom = 10, maptype = "roadmap", color = "bw")
library("ggmap")
# Get map of New York City
NY_map <- get_map(location = c(lon = mean(uber_data_2014$Lon), lat = mean(uber_data_2014$Lat)), zoom = 10, maptype = "roadmap", color = "bw")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("dkahle/ggmap")
library(ggmap)
library(devtools)
# Get map of New York City
NY_map <- get_map(location = c(lon = mean(uber_data_2014$Lon), lat = mean(uber_data_2014$Lat)), zoom = 10, maptype = "roadmap", color = "bw")
library(ggmap)
# Get map of New York City
NY_map <- get_map(location = c(lon = mean(uber_data_2014$Lon), lat = mean(uber_data_2014$Lat)), zoom = 10, maptype = "roadmap", color = "bw")
# Get map of New York City
NY_map <- get_googlemap(location = c(lon = mean(uber_data_2014$Lon), lat = mean(uber_data_2014$Lat)), zoom = 10, maptype = "roadmap", color = "bw")
lon <- mean(uber_data_2014$Lon)
lon <- mean(uber_data_2014$Lon)
lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_googlemap(center = c(lon, lat), zoom = 10, maptype = "roadmap", color = "bw")
lon <- mean(uber_data_2014$Lon)
lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(center = c(lon, lat), zoom = 10, maptype = "roadmap", color = "bw")
# Get map of New York City
NY_map <- get_map(center = c(lon, lat), zoom = 10, maptype = "roadmap", color = "bw")
lon <- mean(uber_data_2014$Lon)
lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- map_data(center = c(lon, lat), zoom = 10, maptype = "roadmap", color = "bw")
install.packages(maps)
install.packaes("maps")
install.packages("maps")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
library(ggmap)
library(maps)
lon <- mean(uber_data_2014$Lon)
lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- map_data(center = c(lon, lat), zoom = 10, maptype = "roadmap", color = "bw")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
library(ggmap)
library(maps)
library(mapdata)
install.packages("mapdata")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
library(ggmap)
library(maps)
library(mapdata)
lon <- mean(uber_data_2014$Lon)
lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- map_data(center = c(lon, lat), zoom = 10, maptype = "roadmap", color = "bw")
lon <- mean(uber_data_2014$Lon)
lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = "New York", maptype = "roadmap")
ggmap(NY_map)
lon <- mean(uber_data_2014$Lon)
lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(), maptype = "roadmap")
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(lon), maptype = "roadmap")
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = "auto", scale = "auto", maptype = c("roadmap"))
ggmap(NY_map)
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = "10", scale = "auto", maptype = c("roadmap"))
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 20, scale = "auto", maptype = c("roadmap"))
ggmap(NY_map)
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 10, scale = "auto", maptype = c("roadmap"))
ggmap(NY_map)
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 14, scale = "auto", maptype = c("roadmap"))
ggmap(NY_map)
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 12, scale = "auto", maptype = c("roadmap"))
ggmap(NY_map)
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 13, scale = "auto", maptype = c("roadmap"))
ggmap(NY_map)
# Plot Uber pickup locations on the New York City map generated above
NY_map_plots <- NY_map + geom_point(data = uber_data_2014, aes(x = lon, y = lat), color = "#d27dfa", size = 0.1, alpha = 0.5, na.rm = TRUE)
# Plot Uber pickup locations on the New York City map generated above
NY_map_plots <- NY_map + geom_point(data = uber_data_2014, aes(x = lon, y = lat), color = "#d27dfa", size = 0.1, alpha = 0.5)
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 13, scale = "auto", maptype = c("roadmap"))
NY <- ggmap(NY_map)
View(NY)
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 13, scale = "auto", maptype = c("roadmap"))
NY <- ggmap(NY_map)
NY
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 15, scale = "auto", maptype = c("roadmap"))
NY <- ggmap(NY_map)
NY
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 14, scale = "auto", maptype = c("roadmap"))
NY <- ggmap(NY_map)
NY
# Plot Uber pickup locations on the New York City map generated above
NY_map_plots <- NY + geom_point(data = uber_data_2014, aes(x = lon, y = lat), color = "#d27dfa", size = 0.1, alpha = 0.5)
NY_map_plots
# Plot Uber pickup locations on the New York City map generated above
NY_map_plots <- NY + geom_point(data = uber_data_2014, aes(x = lon, y = lat), color = "#d27dfa", size = 0.1, alpha = 0.5)
NY_map_plots
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 14, scale = "auto", maptype = c("roadmap"))
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
library(ggmap)
library(maps)
library(mapdata)
mean_lon <- mean(uber_data_2014$Lon)
mean_lat <- mean(uber_data_2014$Lat)
# Get map of New York City
NY_map <- get_map(location = c(mean_lon, mean_lat), zoom = 14, scale = "auto", maptype = c("roadmap"))
NY <- ggmap(NY_map)
NY
# Plot Uber pickup locations on the New York City map generated above
NY_map_plots <- NY + geom_point(data = uber_data_2014, aes(x = lon, y = lat), color = "#d27dfa", size = 0.1, alpha = 0.5)
NY_map_plots
